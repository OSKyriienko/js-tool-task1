module.exports=function(e){require("load-grunt-tasks")(e),e.initConfig({mochaTest:{all:["tests/numeral.js","tests/formats/*.js","tests/locales/*.js"]},karma:{options:{files:["numeral.js","locales.js","tests/numeral.js","tests/formats/*.js","tests/locales/*.js"],frameworks:["mocha","chai"],singleRun:!0,autoWatch:!1},local:{browsers:["Chrome","Firefox"]},ci:{configFile:"karma-ci.conf.js"}},copy:{locales:{files:[{expand:!0,cwd:"src/",src:["locales/*.js"],dest:"./"}]}},compile:{locales:{type:"locales"},formats:{type:"formats"}},uglify:{min:{files:[{expand:!0,cwd:"src/",src:["locales/*.js"],dest:"min/",ext:".min.js"},{expand:!0,src:["numeral.js","locales.js"],dest:"min/",ext:".min.js"}]},options:{preserveComments:"some"}},jshint:{all:["Gruntfile.js","src/**/*.js"],options:{node:!0,browser:!0,curly:!0,devel:!1,eqeqeq:!0,eqnull:!0,newcap:!0,noarg:!0,undef:!0,sub:!0,strict:!1,quotmark:"single",globals:{define:!0}}}}),e.registerTask("default",["test"]),e.registerMultiTask("compile",function(){var s,t,r=this.data.type,a=e.file.read("templates/types.js"),l=e.file.read("templates/anon.js"),n=e.file.expand(["src/"+r+"/*.js"]),i=/\}\(this, function \(numeral\) \{\s([\s\S]+)(?:\s\}\)\);)/,o="";for(t=0;t<n.length;t++)s=e.file.read(n[t]),o+="\n"+e.template.process(l,{data:{content:s.match(i)[1]}})+"\n";e.file.write("temp/"+r+".js",o),"locales"===r&&e.file.write("locales.js",e.template.process(a,{data:{type:r,content:o}}))}),e.registerTask("compile:numeral",function(){var s=e.file.read("src/numeral.js"),t=e.file.read("temp/formats.js"),r=s.indexOf("return numeral;");s=s.substr(0,r)+"\n"+t+s.substr(r),e.file.write("numeral.js",s)}),e.registerTask("build",["jshint","compile","compile:numeral","copy"]),e.registerTask("test",["build","mochaTest","karma:local"]),e.registerTask("test:npm",["build","mochaTest"]),e.registerTask("test:browser",["build","karma:local"]),e.registerTask("dist",["build","uglify"]),e.registerTask("version",function(s){s&&3===s.split(".").length||e.fail.fatal("malformed version. Use\n\n    grunt version:1.2.3"),e.config("string-replace.json",{files:{"package.json":"package.json","component.json":"component.json","bower.json":"bower.json"},options:{replacements:[{pattern:/"version": .*/,replacement:'"version": "'+s+'",'}]}}),e.config("string-replace.numeral",{files:{"src/numeral.js":"src/numeral.js"},options:{replacements:[{pattern:/version : .*/,replacement:"version : "+s},{pattern:/VERSION = .*/,replacement:"VERSION = '"+s+"',"}]}}),e.config("string-replace.templates",{files:{"templates/types.js":"templates/types.js"},options:{replacements:[{pattern:/: .*/,replacement:": "+s}]}}),e.task.run(["string-replace:json","string-replace:templates","string-replace:numeral"])}),e.registerTask("travis",["build","mochaTest","karma:ci"])};